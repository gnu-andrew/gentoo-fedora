diff -up mock-1.1.24/py/mockbuild/backend.py.orig mock-1.1.24/py/mockbuild/backend.py
--- mock-1.1.24/py/mockbuild/backend.py.orig	2012-06-29 17:24:24.000000000 +0200
+++ mock-1.1.24/py/mockbuild/backend.py	2012-08-05 23:45:50.000000000 +0200
@@ -855,16 +855,22 @@ class Root(object):
         self.mounts.umountall(nowarn=nowarn)
 
         # then remove anything that might be left around.
-        mountpoints = open("/proc/mounts").read().strip().split("\n")
+        try:
+            mountpoints = open("/proc/mounts").read().strip().split("\n")
+        except:
+            mountpoints = []
 
         # umount in reverse mount order to prevent nested mount issues that
         # may prevent clean unmount.
         for mountline in reversed(mountpoints):
-            mountpoint = mountline.split()[1]
-            if os.path.realpath(mountpoint).startswith(os.path.realpath(self.makeChrootPath()) + "/"):
-                cmd = "umount -n -l %s" % mountpoint
-                self.root_log.warning("Forcibly unmounting '%s' from chroot." % mountpoint)
-                mockbuild.util.do(cmd, raiseExc=0, shell=True, env=self.env)
+            try:
+                mountpoint = mountline.split()[1]
+                if os.path.realpath(mountpoint).startswith(os.path.realpath(self.makeChrootPath()) + "/"):
+                    cmd = "umount -n -l %s" % mountpoint
+                    self.root_log.warning("Forcibly unmounting '%s' from chroot." % mountpoint)
+                    mockbuild.util.do(cmd, raiseExc=0, shell=True, env=self.env)
+            except:
+                pass
 
     decorate(traceLog())
     def _show_path_user(self, path):
